<!DOCTYPE html>
<html>
  <head>
    <title>Hello, World!</title>
    <link rel="stylesheet" href="styles.css" />
  </head>
  <body>
      <h1 class="title">Hello World! </h1>
      <p id="currentTime"></p>
      <script src="script.js"></script>
  </body>
</html><!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>SPJIMR AI ‚Äî Experimental Chat</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body { margin: 0; font-family: system-ui, sans-serif; background: #f9fafb; }
    .chat-container { max-width: 700px; margin: 20px auto; background: #fff; border-radius: 12px; border: 1px solid #e5e7eb; box-shadow: 0 2px 5px rgba(0,0,0,0.1); }
    .header { background: #7636c9; color: white; padding: 14px; border-radius: 12px 12px 0 0; font-weight: bold; }
    .chat-box { height: 500px; overflow-y: auto; padding: 16px; display: flex; flex-direction: column; }
    .msg { max-width: 75%; padding: 10px 14px; margin: 6px 0; border-radius: 14px; line-height: 1.4; }
    .user { background: #e0f2fe; align-self: flex-end; border: 1px solid #bae6fd; }
    .ai { background: #f3f4f6; align-self: flex-start; border: 1px solid #e5e7eb; }
    .typing { font-style: italic; color: #6b7280; font-size: 14px; margin: 6px 0; }
    .controls { padding: 12px; border-top: 1px solid #e5e7eb; display: flex; gap: 8px; }
    button { padding: 10px 14px; border-radius: 8px; border: 1px solid #d1d5db; cursor: pointer; }
    button:disabled { opacity: 0.5; cursor: not-allowed; }
  </style>
</head>
<body>
  <div class="chat-container">
    <div class="header">üí¨ SPJIMR AI ‚Äî Shopping Assistant</div>
    <div id="chat" class="chat-box"></div>
    <div class="controls">
      <button data-prompt="U1">U1: Needs & budget</button>
      <button data-prompt="U2" disabled>U2: Fast charging?</button>
      <button data-prompt="U3" disabled>U3: Mic & warranty?</button>
      <button data-prompt="U4" disabled>U4: One-line comparison</button>
    </div>
  </div>
  <script>
    (function(){
      const qs = new URLSearchParams(location.search);
      const comp = (qs.get("comp") || "low").toLowerCase();  // ‚Äúhigh‚Äù or ‚Äúlow‚Äù
      const nudge = (qs.get("nudge") || (Math.random() < 0.5 ? "narrow" : "broad")).toLowerCase();
      const pid = qs.get("pid") || null;

      const chat = document.getElementById("chat");

      // Log data structure
      const log = {
        meta: {
          participantId: pid,
          competency: comp,
          nudgeType: nudge,
          assignedAt: new Date().toISOString(),
          device: navigator.userAgent
        },
        transcript: [],  // {timestamp, who, text, step}
        clicks: []       // {timestamp, promptKey}
      };

      // User prompt templates
      const U = {
        U1: "I need over-ear noise-cancelling headphones under ‚Çπ10k. I commute daily; battery life matters.",
        U2: "I prefer fast charging. Any options?",
        U3: "How‚Äôs the mic for calls? And the warranty?",
        U4: "Give me a one-line comparison of your top two."
      };

      // AI responses ‚Äî narrow vs broad
      const A_narrow = {
        U1: "Two fits under ‚Çπ10k: Sony WH-CH720N (‚Çπ9,990; ~35h; strong ANC) and Boat Nirvana 751 ANC (‚Çπ6,999; ~65h). Sony is better for noisy commutes; Boat lasts longer.",
        U2: "Fast charging: Sony ~3 min ‚Üí ~1h play; Boat ~10 min ‚Üí ~10h. Both via USB-C.",
        U3: "Sony‚Äôs beamforming mics are clearer in traffic; Boat works fine indoors. Both have 1-yr warranties; Sony has wider service centers.",
        U4: "Sony = stronger ANC & mics; Boat = longer battery & lower price."
      };
      const A_broad = {
        U1: "There are many headphone options from Sony, Boat, JBL, and others. They often include noise cancelling and decent battery life.",
        U2: "Fast charging is common across many models, but exact specs vary.",
        U3: "Mics are usually okay; warranties depend on brand or seller.",
        U4: "Either could be a good choice depending on your priorities."
      };

      function getReply(stepKey) {
        return nudge === "narrow" ? A_narrow[stepKey] : A_broad[stepKey];
      }

      function addMsg(who, text, stepKey) {
        const div = document.createElement("div");
        div.className = "msg " + (who === "user" ? "user" : "ai");
        div.textContent = text;
        chat.appendChild(div);
        chat.scrollTop = chat.scrollHeight;
        log.transcript.push({
          timestamp: new Date().toISOString(),
          who, text, step: stepKey
        });
      }

      function addTypingIndicator() {
        const div = document.createElement("div");
        div.className = "typing";
        div.textContent = "SPJIMR AI is typing‚Ä¶";
        chat.appendChild(div);
        chat.scrollTop = chat.scrollHeight;
        return div;
      }

      document.querySelector(".controls").addEventListener("click", (e) => {
        const key = e.target.getAttribute("data-prompt");
        if (!key) return;
        e.target.disabled = true;
        log.clicks.push({ timestamp: new Date().toISOString(), prompt: key });
        addMsg("user", U[key], key);
        const typingDiv = addTypingIndicator();
        // Delay (same base, small jitter)
        const delay = 1000 + Math.random() * 800;
        setTimeout(() => {
          typingDiv.remove();
          addMsg("ai", getReply(key), key);
          const order = ["U1", "U2", "U3", "U4"];
          const idx = order.indexOf(key);
          if (idx >= 0 && idx < order.length - 1) {
            document.querySelector(`button[data-prompt=${order[idx+1]}]`).disabled = false;
          }
        }, delay);
      });

      // Greeting when loaded
      setTimeout(() => {
        addMsg("ai", "Hello, I‚Äôm SPJIMR AI. Tell me your needs & budget to start.", "GREETING");
      }, 500);

      // At end of chat, how to end and retrieve log ‚Äî embed link or ‚ÄúFinish‚Äù button in survey or next page.
      window.getChatLog = () => {
        // Return JSON object of `log`
        return log;
      };
    })();
  </script>
</body>
</html>
